PERSONAL SIDE PROJECT: SCHOLARSAVINGS WEB APPLICATION

* BRIEF DESCRIPTION ABOUT THIS PROJECT:
+ Scholarsavings is a software application that is written in html, css and javascript (front-end) and flask + sqlalchemy + postgresql (back-end). 

+ Scholar Savings project is a personal finance management tool for students. The app provides students with the ability to set saving goals, track their expenses and budget, and search for deals and offers in their local area, such as school appliances, meal plans, and restaurants.

+ The app likely uses APIs to pull in data about deals and offers from various sources and presents them in an easy-to-use format for students. Additionally, the app may provide educational resources or tips on personal finance management to help students make informed decisions about their money.

+ Overall, the Scholar Savings app aims to empower students to take control of their finances, save money, and make smarter purchasing decisions.

LANGUAGE USING: HTML, CSS, JS, FLASK + SQLALCHEMY + POSTGRESQL

TEMPLATES + ROUTES:
1. Homepage where users can choose which page to go
2. Signup page for users to sign up
3. Homepage which associate with a specific user
4. A session for users to be log out 
5. Users then have to sign it again

LIST TO IMPROVE:
1. Do the image upload for either passport or driver license
2. Create the logic between fields in the database
3. Make the signup form looks nice using html and css
4. Apply restrictions for the fist API key that request google maps to check the validation of the location
5. The email verification in identification must be unique
6. For login page, username + password must be unique, check for existing and handle appropriate responses
7. For css, adding an errors methods when the fields are invalid
8. Instead of storing the path to the files that the users uploaded using psql, try AWS or Google Cloud Platform

SOME BUGS ENCOUTERED (WORK LOG):
1. Feb 12th, 2023: The identifcation_number when doing the request.form to get the number of either the passport or driver license from the users, cannot be get => 400 bad request => *solved
2. Some static files such as javascript or css cannot be accessed => *solved
3. Feb 14th, 2023: When calculate the age from the users birthday input, the age is being displayed as <span> element, therefore, we cannot retrieve the data and send to the backend => only 2 ways to do this:
    1. Send the age to the server using an AJAX request. => *chosen
    2. Submitting the value as part of the form
4.Feb 14th, 2023: The age element is hidden!!!! Need to fix (*solved by setting the value of the hidden input = the value of the span element
5. Feb 15th, 2023: Create an API request to prompt the user's current location and check if the address, city, country entered are acceptable (API and Service Google Cloud)
6. Feb 16th, 2023: Building API for location checked
7. Feb 17th, 2023: By using Geocoding API from google, it converts the addresses to longtitude and latitude in order to check for validation of the address, if return longtitude and latitude, this means the addresses entered is correct. Today, the problem with the Geocoding API from google cloud is solved, however, I need to see if they require enable billing to maintain the API, if they do not, we can keep using it, if they do then we have to use Geocoding API Free Service.
8. Feb 17th, 2023: 
    + Today, the geocoding API works, we can validate the users address input
    + The error messages are showing for each of the invalid fields after the users submit the form, moreover, the signup page is re-rendered for the users to resubmit the form before sending all the data to the backend.
    + Tomorrow task will be on adding the validation for the identification_id and the identification_number checked, then we will working on Figma, UI/UX design and CSS for the main homepage!
9. Feb 18th, 2023:
    + Today task will mainly be focusing on adding css styling and figma design for the main homepage
    + Tomorrow task will be finishing the homepage html and css and the searching engine for the users to look for keywords and move to the websites faster:
        - What we have for today is navbar with a heading on it and a searching url -> try to connect the searching url when the users clicked the search icon on the homepage.
10. Feb 19th, 2023:
    + Today task will be mainly working on the search engine for the page and finishing the css for the main homepage
11. Feb 26th, 2023:
    + Today I was focusing on fixing the sign up page from sqlite to sqlalchemy in order to make things more secured and easier to read.
    + The plan for this project is still being developed, first of on, I am focusing on developing a user-friendly landing page and style the sign up page for users.
12. Feb 27th, 2023:
    + Today I am going to work on adding fields for users to verify themselves as a university students.
    + For example, if the users choose email address as a verification then it will be a string input, if the users choose other
    + fields such as enrollment letter then it will be image upload.
13. Feb 28th, 2023:
    + Today I'm fixing the image fields and handle the requests from the client when they upload the image for verification
    + The problem that I encountered today and I need to fix tomorrow is the server sent back the response of status 400 Bad Request for the image
    + Some notes are the field of verification material in the database is a LARGE BINARY field which means it can either accept a string or an image/file.

14. March 3rd, 2023: Fix the user's input for email -> encode it to convert str to binary.
15. March 4th, 2023: Today I was working on debugging the user's input for the verification material for email only (not files). 
    + Things need to be done: create a validated users input for fields that are not included in the errors or verification_errors dictionary so we can use them to when we refill the form if there are any errors.
    -> The users don't have to rewrite the fields that were already corrected!

    Plan for March 5th, 2023: 
    + Continue with optimizing validation the user signup form.
    + Work on handle files upload.
    + Plan for this project: features, designs,...

16. March 4th, 2023: validate_verification_material -> raw materials || verification_material -> encoded materials
    + The sign up form is done with all the fields needed to verify the users. Next step, design an API to send a confirmation email towards the email that the users want to use for verification. 
    
    + Create an endpoint towards the login page where users can log in (work for March 5th, 2023), the login database need to be associated with the users information in the users table. 
    + Some features for login: 
        * Username:
            - If the users use their universities email for verification -> this email will be their username
            - If not then the users need to create their own username
        * Password:
            - Design their own password, using password validation algorithm to check for the constraints and common password
        * Phone number:
            - This is required if the users didn't use their school email for verification
    
    + Create sessions for users to log in and log out.
    
    + APIs infrastructure:
        * If the username == email:
            + Send email OTP verification to the email everytime the users log into the session (their secret key for session)
        * Else if the username == username:
            + Send phone OTP verification to the phone number everytime the users log into the session.
    
    4 standard pages so far:
        1. Main_homepage (landing page when the users didn't login yet)
        2. Sign up form (for users to register and verify themselves as a university students)
        3. Search engine (Endpoint for searching pages) (***** Notes: Need to scrap the whole website for keywords dictionary)
        4. Successful page after register

    + Query all the users that haven't register for the username and password to prompt them for login info
    + Design the landing page (Main_homepage) for ScholarSavings.

17. March 5th, 2023: The plan for this project is done. Today I will be working on the login database and register page for users to login into the service.
    + A little bit change on the scope of work, the signup form will be used for prompting users input for machine learning algorithm.
    + The registration will replaced sign up form for users to register for the service.

18. March 6th, 2023: Today I will work on finishing the register page and schema so that the users can register for their account
19. March 11th, 2023: Today I am working on register page, most of them are finished and ready for authentication procedure!