"""changing database

Revision ID: c6d7fefc6a0a
Revises: 1ce31aa05141
Create Date: 2023-05-08 00:42:33.361898

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "c6d7fefc6a0a"
down_revision = "1ce31aa05141"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("availability_schedule", schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ["id"])
        batch_op.drop_constraint(
            "availability_schedule_user_id_fkey", type_="foreignkey"
        )
        batch_op.create_foreign_key(
            None, "user_information", ["user_id"], ["id"], ondelete="CASCADE"
        )

    with op.batch_alter_table("permission", schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ["id"])
        batch_op.drop_constraint("permission_user_id_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            None, "users", ["user_id"], ["user_id"], ondelete="CASCADE"
        )

    with op.batch_alter_table("study_preferences", schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ["id"])
        batch_op.drop_constraint("study_preferences_user_id_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            None, "user_information", ["user_id"], ["id"], ondelete="CASCADE"
        )

    with op.batch_alter_table("user_information", schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ["id"])
        batch_op.drop_constraint("user_information_user_id_fkey", type_="foreignkey")
        batch_op.create_foreign_key(
            None, "users", ["user_id"], ["user_id"], ondelete="CASCADE"
        )

    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ["user_id"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("users", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="unique")

    with op.batch_alter_table("user_information", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "user_information_user_id_fkey", "users", ["user_id"], ["user_id"]
        )
        batch_op.drop_constraint(None, type_="unique")

    with op.batch_alter_table("study_preferences", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "study_preferences_user_id_fkey", "user_information", ["user_id"], ["id"]
        )
        batch_op.drop_constraint(None, type_="unique")

    with op.batch_alter_table("permission", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "permission_user_id_fkey", "users", ["user_id"], ["user_id"]
        )
        batch_op.drop_constraint(None, type_="unique")

    with op.batch_alter_table("availability_schedule", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(
            "availability_schedule_user_id_fkey",
            "user_information",
            ["user_id"],
            ["id"],
        )
        batch_op.drop_constraint(None, type_="unique")

    # ### end Alembic commands ###
